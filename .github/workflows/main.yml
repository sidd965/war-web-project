# This is a basic workflow to help you get started with Actions

name: Build with Maven

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Step 1 - checkout 
        uses: actions/checkout@v2

      # JAVA
      - name: Steup JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      # Build
      - name: Build Package
        run: mvn -B package --file pom.xml
        
      # Verify
      - name: Verify package
        run: |
          cd target
          ls -a
     
     # SAST
      - name: SonarQube Scan
        uses: kitabisa/sonarqube-action@v1.1.0
        with:
          host: ${{ secrets.SONARQUBE_HOST }}
          login: ${{ secrets.SONARQUBE_TOKEN }}
          
      # deploy
      - name: Upload application
        uses: appleboy/scp-action@master
        with:       
          host: ${{ secrets.SERVER_IP_ADDRESS }}        
          username: ${{ secrets.SERVER_USERNAME }}      
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          source: "my-app.jar"      
          target: "~/source"
      - name: Start Service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.API_IP_ADDRESS }}       
          username: ${{ secrets.API_USERNAME }}     
          key: ${{ secrets.AWS_SSH_KEY }}
          port: 22
          script: |
            sudo /etc/init.d/my-app stop
            mv ~/source/my-app.jar ~/source/my-app-old.jar
            mv ~/source/my-app-latest.jar ~/source/my-app.jar
            sudo rm -rf /etc/init.d/my-app
            sudo ln -s -f ~/source/my-app.jar /etc/init.d/my-app
            sudo /etc/init.d/my-app start
            rm ~/source/my-app-old.jar
      
      # DAST
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'owasp/zap2docker-stable'
          target: 'https://www.zaproxy.org/'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
